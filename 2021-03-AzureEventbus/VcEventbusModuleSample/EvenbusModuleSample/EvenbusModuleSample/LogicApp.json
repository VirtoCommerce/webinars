{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logicAppName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 80,
      "metadata": {
        "description": "Name of the Logic App."
      }
    },
    "logicAppLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": [
        "[resourceGroup().location]",
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "westus",
        "northcentralus",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "southindia",
        "centralindia",
        "westindia",
        "canadacentral",
        "canadaeast",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westus2",
        "koreacentral",
        "koreasouth",
        "francecentral",
        "francesouth",
        "uaecentral",
        "uaenorth",
        "southafricanorth",
        "southafricawest",
        "switzerlandnorth",
        "switzerlandwest",
        "germanynorth",
        "germanywestcentral",
        "norwayeast",
        "brazilsoutheast"
      ],
      "metadata": {
        "description": "Location of the Logic App."
      }
    },
    "office365_1_Connection_Name": {
      "type": "string",
      "defaultValue": "office365"
    },
    "office365_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "mko@virtoway.com"
    }
  },
  "variables": {},
  "resources": [
    {
      "name": "[parameters('logicAppName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[parameters('logicAppLocation')]",
      "tags": {
        "displayName": "LogicApp"
      },
      "apiVersion": "2016-06-01",
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "Condition_order_status": {
              "type": "If",
              "expression": {
                "and": [
                  {
                    "equals": [
                      "@toUpper(coalesce(body('GetOrder')?['status'],'N/A'))",
                      "PAID"
                    ]
                  }
                ]
              },
              "actions": {
                "Compose_order_status": {
                  "type": "Compose",
                  "inputs": "@setProperty(body('GetOrder'),'status', variables('orderStatus'))",
                  "runAfter": {
                    "Switch": [
                      "Succeeded"
                    ]
                  }
                },
                "SaveOrder": {
                  "type": "Http",
                  "inputs": {
                    "method": "POST",
                    "uri": "https://eventbus-platform.dev.govirto.com/api/order/customerOrders",
                    "headers": {
                      "api_key": "65f13158-8104-42c0-8d51-6d0477742ce2"
                    },
                    "body": "@outputs('Compose_order_status')"
                  },
                  "runAfter": {
                    "Compose_order_status": [
                      "Succeeded"
                    ]
                  }
                },
                "Send_approval_email": {
                  "type": "ApiConnectionWebhook",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['office365']['connectionId']"
                      }
                    },
                    "body": {
                      "NotificationUrl": "@{listCallbackUrl()}",
                      "Message": {
                        "To": "mko@virtoway.com",
                        "Subject": "@{concat('Oreder ', body('GetOrder')['number'],' Approval Request')}",
                        "Options": "Approve, Reject",
                        "HeaderText": "@{concat('Oreder ', body('GetOrder')['number'],' Approval Request')}",
                        "Importance": "Normal",
                        "HideHTMLMessage": false,
                        "ShowHTMLConfirmationDialog": false
                      }
                    },
                    "path": "/approvalmail/$subscriptions"
                  },
                  "runAfter": {}
                },
                "Switch": {
                  "type": "Switch",
                  "expression": "@body('Send_approval_email')?['SelectedOption']",
                  "cases": {
                    "Approve": {
                      "case": "Approve",
                      "actions": {
                        "Set_orderStatus_processing": {
                          "type": "SetVariable",
                          "inputs": {
                            "name": "orderStatus",
                            "value": "Processing"
                          },
                          "runAfter": {}
                        }
                      }
                    },
                    "Reject": {
                      "case": "Reject",
                      "actions": {
                        "Set_orderStatus_cancelled": {
                          "type": "SetVariable",
                          "inputs": {
                            "name": "orderStatus",
                            "value": "Cancelled"
                          },
                          "runAfter": {}
                        }
                      }
                    }
                  },
                  "default": {
                    "actions": {}
                  },
                  "runAfter": {
                    "Send_approval_email": [
                      "Succeeded"
                    ]
                  }
                }
              },
              "runAfter": {
                "GetOrder": [
                  "Succeeded"
                ]
              }
            },
            "GetOrder": {
              "type": "Http",
              "inputs": {
                "method": "GET",
                "uri": "@{concat('https://eventbus-platform.dev.govirto.com/api/order/customerOrders/', triggerBody()?['data']?['ObjectId'])}",
                "headers": {
                  "api_key": "65f13158-8104-42c0-8d51-6d0477742ce2"
                }
              },
              "runAfter": {
                "Initialize_orderStatus": [
                  "Succeeded"
                ]
              }
            },
            "Initialize_orderStatus": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "orderStatus",
                    "type": "string",
                    "value": "Cancelled"
                  }
                ]
              },
              "runAfter": {
                "Response": [
                  "Succeeded"
                ]
              }
            },
            "Response": {
              "type": "Response",
              "inputs": {
                "statusCode": 200
              },
              "runAfter": {}
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "request": {
              "type": "Request",
              "kind": "Http",
              "inputs": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "EventId": {
                          "type": "string"
                        },
                        "ObjectId": {
                          "type": "string"
                        },
                        "ObjectType": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "type": "string"
                    },
                    "source": {
                      "type": "string"
                    },
                    "specversion": {
                      "type": "string"
                    },
                    "time": {
                      "type": "string"
                    },
                    "traceparent": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "office365": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'office365')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('office365_1_Connection_Name'))]",
                "connectionName": "[parameters('office365_1_Connection_Name')]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('office365_1_Connection_Name'))]"
      ]
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('office365_1_Connection_Name')]",
      "location": "[parameters('logicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'office365')]"
        },
        "displayName": "[parameters('office365_1_Connection_DisplayName')]"
      }
    }
  ],
  "outputs": {}
}